[tool.poetry]
name = "mirageoscience.pre-commit-hooks"

version = "1.0.0"

license = "MIT"
description = ""
repository = "https://github.com/MiraGeoscience/mirageoscience.pre-commit-hooks"
authors = ["Mira Geoscience <support@mirageoscience.com>"]
readme = "README.rst"

include = [
    "LICENSE",
    "README.rst"
]

packages = [
    { include = "hooks" }
]

[tool.poetry.dependencies]
python = "^3.10"

[tool.poetry.group.dev.dependencies]
Pygments = "*"
pylint = "*"
pytest = "*"
pytest-cov = "*"
tomli = "*"

[tool.poetry.scripts]
check_copyright = "hooks.check_copyright:main"
git_message_hook = "hooks.git_message_hook:main"

[tool.ruff]
target-version = "py310"

[tool.ruff.lint]
ignore = [
    "B028",  # no-explicit-stacklevel for warnings.warn()
    "E501",  # line-too-long - code is reformatted (do not care about comments and docstring)
    "F401",  # unsused-import - covered by pycln
]
select = [
    "A",  # flake8-builtins
    "B",  # flake8-bugbear
    "B006",  # Do not use mutable data structures for argument defaults
    "B9",  # flake8-bugbear opiniated warnings
    "BLE",  # flake8-blind-except
    "C4",  # flake8-comprehensions
    "C9",  # mccabe
    "E",  # pycodestyle errors
    "F",  # pyflakes
    "I",  # isort
    "RUF",  # ruff rules
    "TID", # flake8-tidy-imports
    "UP",  # pyupgrade
    "W",  # pycodestyle warnings
]

[tool.ruff.lint.mccabe]
max-complexity = 18

[tool.ruff.lint.isort]
lines-after-imports = 2

[tool.ruff.format]
# default formatting is just fine

[tool.mypy]
warn_unused_configs = true
ignore_missing_imports = true
scripts_are_modules = true
show_error_context = true
show_column_numbers = true
check_untyped_defs = true

plugins = [
    "numpy.typing.mypy_plugin"
]

[tool.pytest.ini_options]
#addopts =

[tool.coverage.run]
branch = true
source = ["my_app"]
omit = [
    "my_app/commands/hello_world.py"
]

[tool.coverage.report]
exclude_lines = [
    "raise NotImplementedError",
    "pass",
    "if TYPE_CHECKING",
    "pragma: no cover"
]

fail_under = 80

[tool.coverage.html]
skip_empty = true
skip_covered = true

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
